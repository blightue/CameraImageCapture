### YamlMime:ManagedReference
items:
- uid: SuiSuiShou.CIC.Infor.CaptureInforManager
  commentId: T:SuiSuiShou.CIC.Infor.CaptureInforManager
  id: CaptureInforManager
  parent: SuiSuiShou.CIC.Infor
  children:
  - SuiSuiShou.CIC.Infor.CaptureInforManager.ReadLocalData
  - SuiSuiShou.CIC.Infor.CaptureInforManager.WriteLocalData(System.Collections.Generic.Dictionary{SuiSuiShou.CIC.Infor.FileInfor,System.Int32})
  langs:
  - csharp
  - vb
  name: CaptureInforManager
  nameWithType: CaptureInforManager
  fullName: SuiSuiShou.CIC.Infor.CaptureInforManager
  type: Class
  source:
    remote:
      path: RunTime/CaptureInforManager.cs
      branch: main
      repo: https://github.com/blightue/UnityCameraImageCapture.git
    id: CaptureInforManager
    path: ../../CameraImageCapture/RunTime/CaptureInforManager.cs
    startLine: 11
  assemblies:
  - suisuishou.cameraimagecapture
  namespace: SuiSuiShou.CIC.Infor
  syntax:
    content: public static class CaptureInforManager
    content.vb: Public Module CaptureInforManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: SuiSuiShou.CIC.Infor.CaptureInforManager.WriteLocalData(System.Collections.Generic.Dictionary{SuiSuiShou.CIC.Infor.FileInfor,System.Int32})
  commentId: M:SuiSuiShou.CIC.Infor.CaptureInforManager.WriteLocalData(System.Collections.Generic.Dictionary{SuiSuiShou.CIC.Infor.FileInfor,System.Int32})
  id: WriteLocalData(System.Collections.Generic.Dictionary{SuiSuiShou.CIC.Infor.FileInfor,System.Int32})
  parent: SuiSuiShou.CIC.Infor.CaptureInforManager
  langs:
  - csharp
  - vb
  name: WriteLocalData(Dictionary<FileInfor, int>)
  nameWithType: CaptureInforManager.WriteLocalData(Dictionary<FileInfor, int>)
  fullName: SuiSuiShou.CIC.Infor.CaptureInforManager.WriteLocalData(System.Collections.Generic.Dictionary<SuiSuiShou.CIC.Infor.FileInfor, int>)
  type: Method
  source:
    remote:
      path: RunTime/CaptureInforManager.cs
      branch: main
      repo: https://github.com/blightue/UnityCameraImageCapture.git
    id: WriteLocalData
    path: ../../CameraImageCapture/RunTime/CaptureInforManager.cs
    startLine: 20
  assemblies:
  - suisuishou.cameraimagecapture
  namespace: SuiSuiShou.CIC.Infor
  summary: "\nWrite capture infor to persistent path\n"
  example: []
  syntax:
    content: public static void WriteLocalData(Dictionary<FileInfor, int> fileInfors)
    parameters:
    - id: fileInfors
      type: System.Collections.Generic.Dictionary{SuiSuiShou.CIC.Infor.FileInfor,System.Int32}
      description: The capture infor to write
    content.vb: Public Shared Sub WriteLocalData(fileInfors As Dictionary(Of FileInfor, Integer))
  overload: SuiSuiShou.CIC.Infor.CaptureInforManager.WriteLocalData*
  nameWithType.vb: CaptureInforManager.WriteLocalData(Dictionary(Of FileInfor, Integer))
  fullName.vb: SuiSuiShou.CIC.Infor.CaptureInforManager.WriteLocalData(System.Collections.Generic.Dictionary(Of SuiSuiShou.CIC.Infor.FileInfor, Integer))
  name.vb: WriteLocalData(Dictionary(Of FileInfor, Integer))
- uid: SuiSuiShou.CIC.Infor.CaptureInforManager.ReadLocalData
  commentId: M:SuiSuiShou.CIC.Infor.CaptureInforManager.ReadLocalData
  id: ReadLocalData
  parent: SuiSuiShou.CIC.Infor.CaptureInforManager
  langs:
  - csharp
  - vb
  name: ReadLocalData()
  nameWithType: CaptureInforManager.ReadLocalData()
  fullName: SuiSuiShou.CIC.Infor.CaptureInforManager.ReadLocalData()
  type: Method
  source:
    remote:
      path: RunTime/CaptureInforManager.cs
      branch: main
      repo: https://github.com/blightue/UnityCameraImageCapture.git
    id: ReadLocalData
    path: ../../CameraImageCapture/RunTime/CaptureInforManager.cs
    startLine: 48
  assemblies:
  - suisuishou.cameraimagecapture
  namespace: SuiSuiShou.CIC.Infor
  summary: "\nRead capture file infor from disk\n"
  example: []
  syntax:
    content: public static Dictionary<FileInfor, int> ReadLocalData()
    return:
      type: System.Collections.Generic.Dictionary{SuiSuiShou.CIC.Infor.FileInfor,System.Int32}
      description: ''
    content.vb: Public Shared Function ReadLocalData() As Dictionary(Of FileInfor, Integer)
  overload: SuiSuiShou.CIC.Infor.CaptureInforManager.ReadLocalData*
references:
- uid: SuiSuiShou.CIC.Infor
  commentId: N:SuiSuiShou.CIC.Infor
  name: SuiSuiShou.CIC.Infor
  nameWithType: SuiSuiShou.CIC.Infor
  fullName: SuiSuiShou.CIC.Infor
  spec.csharp:
  - uid: SuiSuiShou
    name: SuiSuiShou
  - name: .
  - uid: SuiSuiShou.CIC
    name: CIC
  - name: .
  - uid: SuiSuiShou.CIC.Infor
    name: Infor
  spec.vb:
  - uid: SuiSuiShou
    name: SuiSuiShou
  - name: .
  - uid: SuiSuiShou.CIC
    name: CIC
  - name: .
  - uid: SuiSuiShou.CIC.Infor
    name: Infor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuiSuiShou.CIC.Infor.CaptureInforManager.WriteLocalData*
  commentId: Overload:SuiSuiShou.CIC.Infor.CaptureInforManager.WriteLocalData
  name: WriteLocalData
  nameWithType: CaptureInforManager.WriteLocalData
  fullName: SuiSuiShou.CIC.Infor.CaptureInforManager.WriteLocalData
- uid: System.Collections.Generic.Dictionary{SuiSuiShou.CIC.Infor.FileInfor,System.Int32}
  commentId: T:System.Collections.Generic.Dictionary{SuiSuiShou.CIC.Infor.FileInfor,System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<FileInfor, int>
  nameWithType: Dictionary<FileInfor, int>
  fullName: System.Collections.Generic.Dictionary<SuiSuiShou.CIC.Infor.FileInfor, int>
  nameWithType.vb: Dictionary(Of FileInfor, Integer)
  fullName.vb: System.Collections.Generic.Dictionary(Of SuiSuiShou.CIC.Infor.FileInfor, Integer)
  name.vb: Dictionary(Of FileInfor, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - uid: SuiSuiShou.CIC.Infor.FileInfor
    name: FileInfor
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: SuiSuiShou.CIC.Infor.FileInfor
    name: FileInfor
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: SuiSuiShou.CIC.Infor.CaptureInforManager.ReadLocalData*
  commentId: Overload:SuiSuiShou.CIC.Infor.CaptureInforManager.ReadLocalData
  name: ReadLocalData
  nameWithType: CaptureInforManager.ReadLocalData
  fullName: SuiSuiShou.CIC.Infor.CaptureInforManager.ReadLocalData
